{"version":3,"sources":["pages/Home.js","pages/About.js","pages/API.js","pages/Login.js","Nav.js","pages/Main.js","pages/Upload.js","App.js","serviceWorker.js","index.js"],"names":["Home","style","backgroundColor","height","width","marginLeft","paddingTop","src","textAlign","className","to","About","API","Login","useState","user","setUser","handleCallbackResponse","response","console","log","credential","userObject","jwt_decode","document","getElementById","hidden","useEffect","google","accounts","id","initialize","client_id","callback","renderButton","theme","size","prompt","marginBottom","marginTop","Object","keys","length","onClick","e","picture","name","Nav","MainPage","selectedFilters","setSelectedFilters","handleFilterChange","event","currentFilters","filter","target","value","checked","push","splice","indexOf","searchTerm","setSearchTerm","display","type","onChange","href","margin","placeholder","fontWeight","Upload","class","spellcheck","action","for","accept","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d227601.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nimport {Link} from 'react-router-dom';\n\n\nfunction Home() {\n  return( \n    // so here i set the color, and height so that it takes the whole viewpoint, not sure if this is good though\n  <div style={{ backgroundColor: \"#F1F4F5\" ,  height: '100vh', width: '100vw' }}>\n         <img style={{marginLeft:\"1200px\", paddingTop: \"30px\"}} src=\"images/NHSlogo.png\"/> \n         <h5 style={{marginLeft:\"1200px\"}}>Providing NHS Service</h5>\n        <h2 style={{ textAlign: \"center\", paddingTop: \"30px\" }}>  \n        Are you a clinician/physiotherapist or a game developer?\n        </h2>\n\n        <div className=\"btn-container\">\n          <Link to=\"/login\" className=\"btn btn-primary\">Clinician</Link>\n          <img src=\"images/doctor-nurse-image.png\"/>\n          <Link to=\"/api\" className=\"btn btn-primary\">Developer</Link>\n        </div>\n\n  </div>);\n\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../App.css\";\n\nfunction About() {\n  return (\n    <div >This will describe our app</div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n// import \"../App.css\";\n\nfunction API() {\n  return (\n    <div >This will contain API info</div>\n  );\n}\n\nexport default API;","import React from 'react'\nimport {useEffect, useState} from 'react';\nimport '../App.js';\nimport jwt_decode from \"jwt-decode\";\n\n    \n\nfunction Login() {\n\n    //Google stuff\n      // saving the user info, not sure if this is good\n      const [user, setUser] = useState({});\n      \n      \n   \n     \n      function handleCallbackResponse(response){\n          console.log(\"Encoded JWT ID token: \" + response.credential)\n          var userObject = jwt_decode(response.credential);\n          console.log(userObject);\n          setUser(userObject);\n          document.getElementById('signInDiv').hidden = true;\n      }\n    \n      function handleSignOut(event){\n        setUser({});\n        document.getElementById('signInDiv').hidden = false;\n      }\n      \n      // this useEffect runs again if something in the array changes, but we only want to run once so we use an empty array\n      useEffect(() => {\n        // we have to say this global google or otherise it will say google doesnt exist and not get our script info\n        /* global google */ \n        \n        google.accounts.id.initialize({\n          client_id: \"563266460968-jk38s16lbqam3ircfr4furt9p9a8ph3g.apps.googleusercontent.com\",\n          callback: handleCallbackResponse\n        });\n        google.accounts.id.renderButton(\n          document.getElementById(\"signInDiv\"), \n          { theme: \"outline\", size: \"large\"}\n        );\n        //shows recent accounts  you have used, works well without this too, its a new feature\n        google.accounts.id.prompt();\n      }, []);\n      // if we have no user we want to show this sign in button\n      // if we have a user show sign out\n      return (\n        \n        <div className=\"login-page\">\n          <img style={{marginLeft:\"1200px\", paddingTop: \"30px\"}} src=\"images/NHSlogo.png\"/> \n          <h5 style={{marginLeft:\"1200px\"}}>Providing NHS Service</h5>\n         <div className='art-div'>\n        <img src=\"images/doctor-nurse-image.png\"/>\n        <img src=\"images/cross.png\" style={{marginBottom:\"160px\"}}/>\n        <img src=\"images/cross.png\" />\n        <img src=\"images/cross.png\" />\n\n        </div>\n        <div className='login-wrapper' >\n        <h1  style={{marginTop:\"70px\"}}>Log in</h1>\n        <div className=\"login-div\" >\n            <div id=\"signInDiv\"></div>\n            { Object.keys(user).length != 0 &&\n              // this is to show the button only when user attributes arent empty\n              <button onClick = {(e)=> handleSignOut(e)}>Sign Out</button>\n\n            }\n            \n            { user && \n              <div>\n                <img src={user.picture}></img>\n                <h3>{user.name}</h3>\n                {/* <script >Symptom()</script> */}\n              </div>\n\n            }\n        </div>\n        </div>\n\n        </div>\n      );\n    }\n    \n    export default Login;","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\n\n// this was the navbar this app had\n\n// function Nav() {\n//   return (\n//     <nav>\n//       <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">\n//         <div style={{ fontSize: \"30px\" }}>SiteName/logo</div>\n//       </Link>\n//       <ul className=\"nav-links\">\n//         <Link\n//           style={{\n//             color: \"white\",\n//             textDecoration: \"none\",\n//             marginTop: \"10px\",\n//             marginRight: \"40px\",\n//           }}\n//           to=\"/symptom\"\n//         >\n//           <li>Symptom</li>\n//         </Link>\n//         <Link\n//           style={{\n//             color: \"white\",\n//             textDecoration: \"none\",\n//             marginTop: \"10px\",\n//             marginRight: \"40px\",\n//           }}\n//           to=\"/graph\"\n//         >\n//           <li>Graph</li>\n//         </Link>\n//         <Link\n//           style={{ color: \"white\", textDecoration: \"none\", marginTop: \"10px\" }}\n//           to=\"/about\"\n//         >\n//           <li>About</li>\n//         </Link>\n//       </ul>\n//     </nav>\n//   );\n// }\n\n// export default Nav;\n\n\n\n\n// import UCLlogo from '/Users/kyriakicharalambous/eng-app/src/images/UCLlogo.png'      \n\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav\">\n       <div className=\"logo-container\">\n        <img src=\"images/UCLlogo.png\" className=\"logo\" />\n        <div className=\"app-name\">Exercises App</div>\n      </div>\n\n      <div className=\"nav-links\">\n        <Link to=\"/symptom\">Example</Link>\n        {/* <Link to=\"/link2\">Link 2</Link>\n        <Link to=\"/link3\">Link 3</Link> */}\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;","\nimport React, { useState } from 'react';\n\nimport \"../App.css\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\n\n\n\n\nconst MainPage = () => {\n  const [selectedFilters, setSelectedFilters] = useState([]);\n\n  const handleFilterChange = (event) => {\n    const currentFilters = [...selectedFilters];\n    const filter = event.target.value;\n\n    if (event.target.checked) {\n      currentFilters.push(filter);\n    } else {\n      currentFilters.splice(currentFilters.indexOf(filter), 1);\n    }\n    \n    setSelectedFilters(currentFilters);\n  };\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\nconst handleSearchTermChange = (event) => {\nsetSearchTerm(event.target.value);\n  };\n  \n\n  return (\n    <div className=\"page\" style={{display: \"flex\"}} >\n    <div className='side-menu'>\n    <div className=\"filters\" style={{ display: 'inline-block', width: '50%' }}>\n    <h3>Filters</h3>\n    <div className=\"filter\">\n    <input\n             type=\"checkbox\"\n             value=\"filter1\"\n             onChange={handleFilterChange}\n           />\n    Filter 1\n    </div>\n    <div className=\"filter\" >\n    <input\n             type=\"checkbox\"\n             value=\"filter2\"\n             onChange={handleFilterChange}\n           />\n    Filter 2\n    </div>\n    <div className=\"filter\">\n    <input\n             type=\"checkbox\"\n             value=\"filter3\"\n             onChange={handleFilterChange}\n           />\n    Filter 3\n    </div>\n    </div>\n    <div className=\"dashboard\">\n    <h3>Dashboard</h3>\n    \n    <ul>\n    <li><a href=\"#\">Link 1</a></li>\n    <li><a href=\"#\">Link 2</a></li>\n    <li><a href=\"#\">Link 3</a></li>\n    </ul>\n    </div>\n\n\n\n      </div>\n\n<div className='TabSet' style={{ margin: \"20px\" , width: '70%' }}>\n  <input type=\"text\" value={searchTerm} onChange={handleSearchTermChange} placeholder=\"Search\" style={{marginLeft:\"700px\"}}/>\n      <Tabs>\n        <TabList>\n          <Tab>Exercises</Tab>\n          <Tab>Templates</Tab>\n          <Tab>Library</Tab>\n\n        </TabList>\n\n        <TabPanel>\n          <p style={{paddingTop:\"20px\", fontWeight:\"bold\", marginLeft:\"20px\"}}>\n            Exercises\n          </p>\n          <div style={{backgroundColor:\"white\", height:\"128px\", width:\"248px\", marginLeft:\"20px\"}}>\n            <img src={'/images/Bird dog.jpeg'  } style={{height:\"120px\", width:\"240px\"}}></img>\n          </div>\n     \n        </TabPanel>\n\n      </Tabs>\nwhyy\n    </div>\n      {/* this should change to your selections- whatever we need here  */}\n    <div className='Selections'>\n      <Tabs>\n      <TabList>\n         Your Selections\n          <TabPanel>\n      \n        </TabPanel>\n        </TabList>\n      </Tabs>\n      </div>\n\n\n    </div>\n    \n\n    \n  );\n};\n\nexport default MainPage;\n\n\n\n","import React, { useEffect, useState } from \"react\";\n\n\nimport {Link} from 'react-router-dom';\n\nfunction Upload() {\n  return( \n     <div className=\"uploadPage\"> \n    <div className=\"newMovement\">\n        <h1 className=\"uploadTitle\">New Movement</h1>\n\n        <form className=\"uploadFields\">\n        <h4 >Title *: </h4>\n        <input type=\"text\" className=\"inputField\"></input>\n        <h4 >Movement description *: </h4>\n        <input type=\"text\" className=\"inputField\"></input>\n        <h4>Youtube link *: </h4>\n        <input type=\"text\" className=\"inputField\"></input>\n        <h4>Upload JSON file *: </h4>\n        <input type=\"file\" className=\"inputField\"></input>\n\n        <div class=\"wrapper\">\n        <div class=\"title\"><h2>Tags</h2>\n        \n        </div>\n        <div class=\"content\">\n            <p>Press enter or add a comma after each tag</p>\n            <ul><input type=\"text\" spellcheck=\"false\"></input></ul>\n        </div>\n        <div class=\"details\">\n            <p><span>10</span> tags are remaining</p>\n            <button>Remove All</button>\n        </div>\n        </div>\n    <script src=\"uploadjs.js\"></script>\n\n\n        </form>\n      \n    </div>\n    <div className=\"image\"></div>\n    <form action=\"/action_page.php\">\n  <label for=\"img\">Select image:</label>\n  <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\"></input>\n  <input type=\"submit\"></input>\n    </form>\n\n    </div>   \n\n  );\n\n}\n\nexport default Upload;\n","import React, { useEffect, useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\n\n\nimport API from \"./pages/API\";\nimport Login from \"./pages/Login\";\nimport Nav from \"./Nav\";\n// import Footer from \"./Footer\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/Main\";\nimport Upload from \"./pages/Upload\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n   \n          <Route path=\"/main\" component={MainPage} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/api\" component={API} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/upload\" component={Upload} />\n        </Switch>\n        {/* <Footer /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}